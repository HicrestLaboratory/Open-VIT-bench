import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F

from cvit_utils import plot_tensor
from timm.layers.mlp import Mlp

print("Test Mlp")

A1 = torch.tensor([[-86.568,  66.177,  96.186,  79.114, -83.015],
                   [ 69.755,  13.806,  34.333,  98.375, -78.642],
                   [-30.654, -35.661, -74.323,  -5.587,  61.845],
                   [ 49.669,  24.432, -73.458,  64.886,  37.806],
                   [-26.065, -73.273, -44.252, -72.248, -98.056],
                   [ 65.535,  33.543,  33.323, -96.451,  83.333],
                   [ 12.360,  35.906, -98.740,  78.494, -75.532],
                   [  6.516, -81.161,  19.079,  60.408, -30.492],
                   [ 72.245,   5.159,  -9.472,   0.714,  59.185],
                   [-65.835,  83.739, -66.666,   4.387,  73.823]])
print("### A1")
plot_tensor(A1)

b1 = torch.tensor([-20.325, -9.758, -2.345, -66.422, -39.157, -31.861, -14.964, 19.850, 82.480, -87.283])
print("### b1")
plot_tensor(b1)

g = torch.tensor([1.805, -37.070, -66.500, 76.989, -21.634, -74.530, 70.157, 63.336, -82.581, -18.660])
print("### g")
plot_tensor(g)

bg = torch.tensor([93.780, -98.251, 49.954, -19.055, -9.098, 48.841, 86.411, -95.742, -72.392, 62.226])
print("### bg")
plot_tensor(bg)

A2 = torch.tensor([[ -2.005, -14.575,  17.934, -29.395,  -5.142,  28.463,  32.815, -74.448,  76.309,   0.199],
                   [-32.319, -50.704,  79.610, -53.554, -59.941,  -4.564,   7.415,  50.209, -28.249,  67.815],
                   [ 75.023,  99.586,  25.779,  -9.515, -87.194, -93.804, -68.875, -33.723,  78.107,  76.215],
                   [ 62.282,  10.427, -45.408,  16.962,  48.725,  -8.866, -68.867,  78.927, -58.144, -99.136],
                   [ 28.442,  19.411, -83.094, -53.910,  63.968,  13.114,  12.642, -64.282,  79.999,  95.254],
                   [-86.990, -49.479, -26.197,  21.675,  96.535, -37.169,  56.591, -90.600, -62.138,  39.213],
                   [ 48.827, -44.107, -42.021, -58.035,  40.707,  39.406,  34.763,  25.091, -65.111, -81.942],
                   [-51.952, -84.394,  51.219, -83.677,  -8.525,  43.929, -61.486, -13.540, -54.732, -62.259]])
print("### A2")
plot_tensor(A2)

b2 = torch.tensor([-55.690, 61.838, -25.379, 95.026, 2.756, 12.244, 85.241, 7.426])
print("### b2")
plot_tensor(b2)

mlp = Mlp(
    in_features=5, hidden_features=10, out_features=8, act_layer=nn.GELU, bias=True, norm_layer=nn.LayerNorm,
    use_conv=False, drop=0.0)
mlp.norm.weight.data = g
mlp.norm.bias.data = bg
mlp.fc1.weight.data = A1
mlp.fc1.bias.data = b1
mlp.fc2.weight.data = A2
mlp.fc2.bias.data = b2

x = torch.tensor([[[-80.239, -65.163, -11.674,  80.540,  78.752],
                   [ -8.828,  89.946, -68.467,  93.927, -53.348],
                   [ 30.015,  25.271, -13.846, -93.654, -67.632],
                   [-51.045, -76.526, -40.834,  -1.799,  61.147],
                   [  2.192,  60.250,  55.517,  58.599,  99.590],
                   [ 46.867, -89.113, -69.205, -82.725,  29.002]],

                  [[-89.131,  95.916, -64.145,  41.922,   6.166],
                   [ 37.226,  83.950, -90.753, -88.949,  21.701],
                   [ 27.773,  74.681,  42.413,  84.389,  45.397],
                   [-28.464,  63.680,  49.965, -50.078,  69.102],
                   [ 63.648,  56.166, -19.630,  33.995, -79.947],
                   [-83.807, -80.624, -88.064,  88.512,  92.782]]])
print("### x")
plot_tensor(x)

y = mlp.forward(x)
print("### y = mlp(x)")
plot_tensor(y)
